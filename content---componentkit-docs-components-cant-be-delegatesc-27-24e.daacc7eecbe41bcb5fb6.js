(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return i}),n.d(t,"rightToc",function(){return a}),n.d(t,"default",function(){return s});n(0);var o=n(125);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i={title:"Components Can't Be Delegates Directly",id:"components-cant-be-delegates"},a=[],c={rightToc:a},p="wrapper";function s(e){var t=e.components,n=l(e,["components"]);return Object(o.b)(p,r({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"TL;DR: You can use ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentDelegateAttribute")," to configure a delegate for a view to proxy delegate methods back to your component."),Object(o.b)("p",null,"Components are ",Object(o.b)("strong",{parentName:"p"},"short-lived"),", and their lifecycle is not under your control. Thus they should not be delegates or ",Object(o.b)("inlineCode",{parentName:"p"},"NSNotification")," observers."),Object(o.b)("p",null,"An example: imagine you're showing a ",Object(o.b)("inlineCode",{parentName:"p"},"UIAlertView"),". You might be tempted to make the component the delegate:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-objectivec-redhighlight"}),'@implementation AlertDisplayComponent <UIAlertViewDelegate>\n{\n  UIAlertView *_alertView;\n}\n\n- (void)didTapDisplayAlert\n{\n  _alertView = [[UIAlertView alloc] initWithTitle:@"Are you sure?"\n                                          message:nil\n                                         delegate:self ...];\n  [_alertView show];\n}\n\n- (void)alertView:(UIAlertView *)alert didDismissWithButtonIndex:(NSInteger)buttonIndex\n{\n  [self updateState:...];\n}\n@end\n')),Object(o.b)("p",null,"But if the component hierarchy is regenerated for any reason, the original component will deallocate and the alert view will be left with no delegate."),Object(o.b)("p",null,"Instead, use ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentController"),". Component controllers are long-lived; they persist and keep track of each updated version of your component. You can ",Object(o.b)("a",r({parentName:"p"},{href:"./component-controllers"}),"learn more about component controllers"),"; here's an example of their use:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-objectivec"}),'@interface AlertDisplayComponentController : CKComponentController <UIAlertViewDelegate>\n@end\n\n@implementation AlertDisplayComponentController\n{\n  UIAlertView *_alertView;\n}\n\n- (void)didTapDisplayAlert\n{\n  _alertView = [[UIAlertView alloc] initWithTitle:@"Are you sure?"\n                                          message:nil\n                                         delegate:self ...];\n  [_alertView show];\n}\n\n- (void)alertView:(UIAlertView *)alert didDismissWithButtonIndex:(NSInteger)buttonIndex\n{\n  [self.component updateState:...];\n}\n@end\n')),Object(o.b)("p",null,"Your other option is to use ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentDelegateAttribute"),", which will proxy delegate callbacks into the component responder chain."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-objectivec"}),"[CKComponent\n newWithView:{[UIScrollView class], {\n   CKComponentDelegateAttribute(@selector(setDelegate:), {\n   @selector(scrollViewDidScroll:),\n   @selector(scrollViewDidZoom:),\n   })\n }}\n size:{}] ...\n")),Object(o.b)("p",null," Then in your component, you can implement the delegate methods ",Object(o.b)("inlineCode",{parentName:"p"},"-scrollViewDidScroll:")," and ",Object(o.b)("inlineCode",{parentName:"p"},"-scrollViewDidZoom:"),"."))}s.isMDXComponent=!0}}]);