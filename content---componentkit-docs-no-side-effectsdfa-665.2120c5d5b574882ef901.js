(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{91:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return i}),t.d(n,"rightToc",function(){return u}),t.d(n,"default",function(){return f});t(0);var r=t(125);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i={title:"No Side Effects"},u=[],p={rightToc:u},c="wrapper";function f(e){var n=e.components,t=a(e,["components"]);return Object(r.b)(c,o({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Your ",Object(r.b)("inlineCode",{parentName:"p"},"+new")," method should not modify any global variables or global state. This could result in a component returning different results for the same parameters, which would be strange."),Object(r.b)("p",null,"If you're a functional programming nerd, you can think of ",Object(r.b)("inlineCode",{parentName:"p"},"+new")," as a ",Object(r.b)("a",o({parentName:"p"},{href:"http://en.wikipedia.org/wiki/Pure_function"}),"pure function")," mapping from a set of input parameters to a component. (Pure functions have many benefits, which I won't attempt to outline here.)"))}f.isMDXComponent=!0}}]);