(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{77:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",function(){return s}),t.d(a,"rightToc",function(){return p}),t.d(a,"default",function(){return r});t(0);var n=t(133);t(134);function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function o(e,a){if(null==e)return{};var t,n,c=function(e,a){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var s={title:"Basics"},p=[{value:"Setup",id:"setup",children:[]},{value:"Add/Modify content in the collection view",id:"addmodify-content-in-the-collection-view",children:[]},{value:"Handle actions",id:"handle-actions",children:[]}],m={rightToc:p},i="wrapper";function r(e){var a=e.components,t=o(e,["components"]);return Object(n.a)(i,c({},m,t,{components:a,mdxType:"MDXLayout"}),Object(n.a)("p",null,"In this section we will go through the steps to create a ",Object(n.a)("inlineCode",{parentName:"p"},"UICollectionView")," powered by components."),Object(n.a)("p",null,"We will use a simple setup with a ",Object(n.a)("inlineCode",{parentName:"p"},"UIViewController")," using a ",Object(n.a)("inlineCode",{parentName:"p"},"UICollectionView")," that uses a ",Object(n.a)("inlineCode",{parentName:"p"},"UICollectionViewFlowLayout"),"."),Object(n.a)("h3",null,Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"setup"})),Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#setup"}),"#"),"Setup"),Object(n.a)("h4",null,Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"component-provider"})),Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#component-provider"}),"#"),"Component Provider"),Object(n.a)("p",null,"The ",Object(n.a)("inlineCode",{parentName:"p"},"CKCollectionViewDataSource")," is responsible for transforming each model into a component."),Object(n.a)("p",null,"This transformation will be defined as a method on a class conforming to ",Object(n.a)("inlineCode",{parentName:"p"},"CKComponentProvider"),". This class will then be passed to the ",Object(n.a)("inlineCode",{parentName:"p"},"CKCollectionViewDataSource")," as the component provider and the datasource will call the provider every time it needs to generate a component for a model."),Object(n.a)("p",null,"Let's make our UIViewController be the component provider here."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"@interface")," MyController ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"<"),"CKComponentProvider",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),">"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"@end"),"\n\n",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"@implementation")," MyController\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"+")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"CKComponent ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"componentForModel",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"MyModel",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"model context",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"MyContext",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"context ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"return")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"MyComponent newWithModel",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"model context",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"context",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n")),Object(n.a)("div",{class:"note-important"},Object(n.a)("p",null,"This class method has to be pure and thread safe.")),Object(n.a)("ul",null,Object(n.a)("li",{parentName:"ul"},Object(n.a)("strong",{parentName:"li"},"Why use a class Method and not a block?")," The model to component transform should not rely on mutable state. Blocks make it very easy to capture mutable state that could introduce side effects in the system. Using a class method allows to better enforce the constraint of immutability from an API standpoint."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("strong",{parentName:"li"},"What is this context ?")," The context is an arbitrary immutable object, that is passed to this method by the ",Object(n.a)("inlineCode",{parentName:"li"},"CKCollectionViewDataSource"),". Typically, the context can be used to pass into your component tree:\n",Object(n.a)("em",{parentName:"li"}," immutable contextual informations such as the type of device.\n")," external dependencies such as an image downloader.")),Object(n.a)("div",{class:"note-important"},Object(n.a)("p",null,"Don't access global state inside a Component. Use the context to pass this information instead.")),Object(n.a)("h4",null,Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"create-a-ckcollectionviewdatasource"})),Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#create-a-ckcollectionviewdatasource"}),"#"),"Create a ",Object(n.a)("inlineCode",{parentName:"h4"},"CKCollectionViewDataSource")),Object(n.a)("p",null,"Ok, so now we have our view controller as the component provider, let's create our ",Object(n.a)("inlineCode",{parentName:"p"},"CKCollectionViewDataSource")," and attach the collection view to it."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"-")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"void"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"viewDidLoad ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"super")," viewDidLoad",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n\n",Object(n.a)("span",c({parentName:"code"},{className:"token comment"}),"// Range provider"),"\n_sizeRangeProvider ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"CKComponentFlexibleSizeRangeProvider providerWithFlexibility",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"CKComponentSizeRangeFlexibleHeight",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"const")," CKSizeRange sizeRange ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"_sizeRangeProvider sizeRangeForBoundingSize",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"collectionView",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"bounds",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"size",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.a)("span",c({parentName:"code"},{className:"token comment"}),"// Data source configuration"),"\nCKDataSourceConfiguration ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"configuration ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"="),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"CKDataSourceConfiguration alloc",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," initWithComponentProvider",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self")," class",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," context",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"context sizeRange",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"sizeRange",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token comment"}),"// Data source                       "),"\n_dataSource ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"CKCollectionViewDataSource alloc",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," initWithCollectionView",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"collectionView supplementaryViewDataSource",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"nil configuration",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"configuration",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(n.a)("p",null,"Note that we pass the context in the initializer. It is the same context that will get passed into ",Object(n.a)("inlineCode",{parentName:"p"},"+ (CKComponent *)componentForModel:context:")," every time a component needs to be computed."),Object(n.a)("h3",null,Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"addmodify-content-in-the-collection-view"})),Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#addmodify-content-in-the-collection-view"}),"#"),"Add/Modify content in the collection view"),Object(n.a)("h4",null,Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"changeset-api"})),Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#changeset-api"}),"#"),"Changeset API"),Object(n.a)("p",null,"Using ",Object(n.a)("inlineCode",{parentName:"p"},"CKCollectionViewDataSource")," changes are never applied directly to the collection. Instead, commands are sent to the datasource and from those commands will be used to compute the components and apply the corresponding changes to the collection view."),Object(n.a)("p",null,"Let's add a section at index 0 with two items at indexes 0 and 1."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"-")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"void"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"viewDidAppear",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"BOOL",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"animated ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"super")," viewDidAppear",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"animated",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n  CKDataSourceChangeset ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"initialChangeset ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"="),"\n  ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"CKDataSourceChangesetBuilder transactionalComponentDataSourceChangeset",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),"\n    withInsertedSections",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"NSIndexSet indexSetWithIndex",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(n.a)("span",c({parentName:"code"},{className:"token comment"}),"// Don't forget the insertion of section 0"),"\n      withInsertedItems",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"@"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"NSIndexPath indexPathForItem",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0")," inSection",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":")," firstModel",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"NSIndexPath indexPathForItem",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"1")," inSection",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":")," secondModel",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," build",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"dataSource applyChangeset",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"initialChangeset mode",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"CKUpdateModeAsynchronous userInfo",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"nil",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(n.a)("p",null,"Later on (for instance when updated data is received from the server), we can update our first item with an updated model."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\nCKDataSourceChangeset ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"updateChangeset ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"="),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"CKDataSourceChangesetBuilder transactionalComponentDataSourceChangeset",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," withUpdatedItems",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"@"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"NSIndexPath indexPathForItem",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0")," inSection",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":")," updatedFirstModel",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," build",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"dataSource applyChangeset",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"updateChangeset mode",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"CKUpdateModeAsynchronous userInfo",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"nil",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"\n")),Object(n.a)("p",null,"It is also possible to remove items and sections through this ",Object(n.a)("a",c({parentName:"p"},{href:"datasource-changeset-api.html"}),"changeset API"),"."),Object(n.a)("h4",null,Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"layout"})),Object(n.a)("a",c({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#layout"}),"#"),"Layout"),Object(n.a)("p",null,"As you can see above a ",Object(n.a)("em",{parentName:"p"},"constrained size")," is passed every time a changeset is enqueued, this constrained size is used internally to layout the components and compute their final sizes which will have to be within those top-level constraints."),Object(n.a)("p",null,"The form of the constrained size is: {% raw  %}",Object(n.a)("inlineCode",{parentName:"p"},"{{minWidth, minHeight},{maxWidth, maxHeight}}"),"{% endraw %}."),Object(n.a)("p",null,"Let's see how the computed component sizes can be used with the ",Object(n.a)("inlineCode",{parentName:"p"},"UICollectionViewFlowLayout"),", for the purpose of this example let's assume that the view controller is the delegate of the flow layout."),Object(n.a)("p",null,"Each item is sized so that it matches the size of its corresponding component."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"-")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"CGSize",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"collectionView",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"UICollectionView ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"collectionView layout",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"UICollectionViewLayout ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"collectionViewLayout sizeForItemAtIndexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"NSIndexPath ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"indexPath ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"return")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"dataSource sizeForItemAtIndexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"indexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(n.a)("p",null,"Pretty simple right ? And this logic can apply to any ",Object(n.a)("inlineCode",{parentName:"p"},"UICollectionViewLayout")," :"),Object(n.a)("ul",null,Object(n.a)("li",{parentName:"ul"},"The datasource computes the size of the components within the top level constraint."),Object(n.a)("li",{parentName:"ul"},"Then those sizes can be used in a ",Object(n.a)("inlineCode",{parentName:"li"},"UICollectionViewLayout")," to size and position the corresponding items.")),Object(n.a)("h3",null,Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"handle-actions"})),Object(n.a)("a",c({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#handle-actions"}),"#"),"Handle actions"),Object(n.a)("p",null,"Time to interact with those items now; nothing special here the regular selection APIs can be used. Let's say the models have a url that should be opened when the user tap on an item."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"-")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"void"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"collectionView",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"UICollectionView ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"collectionView didSelectItemAtIndexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"NSIndexPath ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"indexPath\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n    MyModel ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"model ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"MyModel ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"self"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"dataSource modelForItemAtIndexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"indexPath",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(n.a)("span",c({parentName:"code"},{className:"token keyword"}),"if")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"model",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"url ",Object(n.a)("span",c({parentName:"code"},{className:"token operator"}),"!=")," nil",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"UIApplication sharedApplication",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]")," openURL",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"navURL",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(n.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(n.a)("div",{class:"note-important"},Object(n.a)("p",null,"The datasource is the source of truth for the collection view, if you have to retrieve a model corresponding to an indexPath always use `-modelForItemAtIndexPath`. See this ",Object(n.a)("a",{href:"/docs/datasource-gotchas.html#the-datasource-involves-asynchronous-operations"},"gotcha")," for more details.")))}r.isMDXComponent=!0}}]);