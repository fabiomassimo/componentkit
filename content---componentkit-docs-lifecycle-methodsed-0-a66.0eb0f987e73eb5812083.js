(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{99:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",function(){return l}),a.d(n,"rightToc",function(){return r}),a.d(n,"default",function(){return d});a(0);var t=a(131);a(132);function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l={title:"Lifecycle Methods"},r=[{value:"Ordering",id:"ordering",children:[{value:"Mounting",id:"mounting",children:[]},{value:"Remounting",id:"remounting",children:[]},{value:"Unmounting",id:"unmounting",children:[]},{value:"Updating",id:"updating",children:[]}]},{value:"Uses",id:"uses",children:[{value:"Mutating the View",id:"mutating-the-view",children:[]}]}],c={rightToc:r},m="wrapper";function d(e){var n=e.components,a=o(e,["components"]);return Object(t.a)(m,i({},c,a,{components:n,mdxType:"MDXLayout"}),Object(t.a)("p",null,Object(t.a)("a",i({parentName:"p"},{href:"component-controllers.html"}),"Component controllers")," expose lifecycle methods that allow you to perform custom operations as components mount, unmount, update, and acquire views."),Object(t.a)("div",{class:"note"},Object(t.a)("p",null,"Whenever possible, avoid using lifecycle methods. Think of them as an emergency escape hatch for integrating with stateful code.")),Object(t.a)("h2",null,Object(t.a)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"ordering"})),Object(t.a)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#ordering"}),"#"),"Ordering"),Object(t.a)("p",null,"Lifecycle methods have the following defined ordering."),Object(t.a)("h3",null,Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mounting"})),Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mounting"}),"#"),"Mounting"),Object(t.a)("ol",null,Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"willMount")),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"componentDidAcquireView")," ",Object(t.a)("em",{parentName:"li"},"if")," the controller's component has a view"),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"didMount")," after the component ",Object(t.a)("em",{parentName:"li"},"and")," all of its children are mounted")),Object(t.a)("h3",null,Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"remounting"})),Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#remounting"}),"#"),"Remounting"),Object(t.a)("p",null,"Remounting occurs when the controller's component is already mounted and either the component is being updated or the root component is being attached to a different view."),Object(t.a)("ol",null,Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"willRemount")),Object(t.a)("li",{parentName:"ol"},"If the controller's component creates a view and its previous view cannot be recycled:",Object(t.a)("ol",{parentName:"li"},Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"componentWillRelinquishView")),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"componentDidAcquireView")))),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"didRemount"))),Object(t.a)("h3",null,Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"unmounting"})),Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#unmounting"}),"#"),"Unmounting"),Object(t.a)("ol",null,Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"willUnmount")),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"componentWillRelinquishView")," ",Object(t.a)("em",{parentName:"li"},"if")," the controller's component has a view"),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"didUnmount"))),Object(t.a)("div",{class:"note-important"},Object(t.a)("p",null,"There are no guarantees that the component's children or parents are mounted in ",Object(t.a)("code",null,"willUnmount")," or ",Object(t.a)("code",null,"componentWillRelinquishView"),". You ",Object(t.a)("b",null,"must not")," use ",Object(t.a)("code",null,"CKComponentActionSend")," or any other method that assumes the component's parents are mounted.")),Object(t.a)("h3",null,Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"updating"})),Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#updating"}),"#"),"Updating"),Object(t.a)("p",null,"The controller's component can be updated to a new version of the component as part of the mounting or remounting process. In this case, you'll receive the following callbacks:"),Object(t.a)("ol",null,Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"willUpdateComponent")," before ",Object(t.a)("inlineCode",{parentName:"li"},"willMount")," or ",Object(t.a)("inlineCode",{parentName:"li"},"willRemount")),Object(t.a)("li",{parentName:"ol"},Object(t.a)("inlineCode",{parentName:"li"},"didUpdateComponent")," after ",Object(t.a)("inlineCode",{parentName:"li"},"didMount")," or ",Object(t.a)("inlineCode",{parentName:"li"},"didRemount"))),Object(t.a)("h2",null,Object(t.a)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"uses"})),Object(t.a)("a",i({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#uses"}),"#"),"Uses"),Object(t.a)("h3",null,Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mutating-the-view"})),Object(t.a)("a",i({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mutating-the-view"}),"#"),"Mutating the View"),Object(t.a)("p",null,"Generally views are a hidden implementation detail of ComponentKit, but you may need to break that abstraction:"),Object(t.a)("ul",null,Object(t.a)("li",{parentName:"ul"},"Animations that cannot be implemented using ",Object(t.a)("inlineCode",{parentName:"li"},"animationsFromPreviousComponent:"),". Be sure you remove all animations in ",Object(t.a)("inlineCode",{parentName:"li"},"componentWillRelinquishView"),"."),Object(t.a)("li",{parentName:"ul"},"Interfacing with views that only expose event callbacks via a delegate API. Make the component controller the view's delegate in ",Object(t.a)("inlineCode",{parentName:"li"},"componentDidAcquireView")," and nil out the view's delegate in ",Object(t.a)("inlineCode",{parentName:"li"},"componentWillRelinquishView"),".")),Object(t.a)("div",{class:"note"},Object(t.a)("p",null,"In your ",Object(t.a)("code",null,"componentDidAcquireView")," and ",Object(t.a)("code",null,"componentWillRelinquishView")," implementations you may only reference the view via the component controller's `view` property. Remember, these lifecycle methods are called before the component has finished being mounted. Trying to use the component's view context will not work until the component has been mounted.")))}d.isMDXComponent=!0}}]);