(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{65:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",function(){return p}),n.d(a,"rightToc",function(){return s}),n.d(a,"default",function(){return N});n(0);var t=n(133);n(134);function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function o(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var p={title:"Check for Nil"},s=[],r={rightToc:s},m="wrapper";function N(e){var a=e.components,n=o(e,["components"]);return Object(t.a)(m,c({},r,n,{components:a,mdxType:"MDXLayout"}),Object(t.a)("p",null,"Remember: ",Object(t.a)("strong",{parentName:"p"},Object(t.a)("inlineCode",{parentName:"strong"},"+new")," can always return nil"),". ComponentKit adopts the convention that a component may return nil from ",Object(t.a)("inlineCode",{parentName:"p"},"+new")," to signal that it has no data to render."),Object(t.a)("p",null,"This is important when you are implementing ",Object(t.a)("inlineCode",{parentName:"p"},"+new"),"; you must check if ",Object(t.a)("inlineCode",{parentName:"p"},"[super +new...]")," returned nil before assigning to ivars."),Object(t.a)("pre",{className:"language-objectivec"},Object(t.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"redhighlight",redhighlight:!0}),Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"@implementation")," MyComponent\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n  NSString ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"_name",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"+")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"instancetype",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"newWithName",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"NSString ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"name\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n  MyComponent ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"c ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"super")," newWithComponent",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n  c",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"->"),"_name ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"name copy",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";")," ",Object(t.a)("span",c({parentName:"code"},{className:"token comment"}),"// Crashes if c is nil"),"\n  ",Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"return")," c",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(t.a)("p",null,"Instead:"),Object(t.a)("pre",{className:"language-objectivec"},Object(t.a)("code",c({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"+")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"instancetype",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"newWithName",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"NSString ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"name\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n  MyComponent ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"*"),"c ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"super")," newWithComponent",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),":"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"."),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"c",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n    c",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"->"),"_name ",Object(t.a)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"name copy",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(t.a)("span",c({parentName:"code"},{className:"token keyword"}),"return")," c",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(t.a)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(t.a)("p",null,"(This is somewhat analogous to the usual pattern for implementing ",Object(t.a)("inlineCode",{parentName:"p"},"-init"),", where you check if ",Object(t.a)("inlineCode",{parentName:"p"},"[super init...]")," returns nil.)"))}N.isMDXComponent=!0}}]);