(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{97:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",function(){return c}),t.d(a,"rightToc",function(){return p}),t.d(a,"default",function(){return l});t(0);var n=t(133);t(134);function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c={title:"Layout"},p=[{value:"Layout Components",id:"layout-components",children:[]},{value:"Implementing computeLayoutThatFits:",id:"implementing-computelayoutthatfits",children:[]}],s={rightToc:p},r="wrapper";function l(e){var a=e.components,t=i(e,["components"]);return Object(n.a)(r,o({},s,t,{components:a,mdxType:"MDXLayout"}),Object(n.a)("p",null,Object(n.a)("inlineCode",{parentName:"p"},"UIView")," instances store position and size in their ",Object(n.a)("inlineCode",{parentName:"p"},"center")," and ",Object(n.a)("inlineCode",{parentName:"p"},"bounds")," properties. As constraints change, Core Animation performs a layout pass to call ",Object(n.a)("inlineCode",{parentName:"p"},"layoutSubviews"),", asking views to update these properties on their subviews."),Object(n.a)("p",null,Object(n.a)("inlineCode",{parentName:"p"},"CKComponent")," instances do not have any size or position information. Instead, ComponentKit calls the ",Object(n.a)("inlineCode",{parentName:"p"},"layoutThatFits:")," method with a given size constraint and the component must ",Object(n.a)("em",{parentName:"p"},"return")," a structure describing both its size, and the position and sizes of its children."),Object(n.a)("pre",{className:"language-objectivec"},Object(n.a)("code",o({parentName:"pre"},{className:"language-objectivec",metastring:"highlight",highlight:!0}),Object(n.a)("span",o({parentName:"code"},{className:"token keyword"}),"struct")," CKComponentLayout ",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  CKComponent ",Object(n.a)("span",o({parentName:"code"},{className:"token operator"}),"*"),"component",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n  CGSize size",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n  std",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),":"),Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),":"),"vector",Object(n.a)("span",o({parentName:"code"},{className:"token operator"}),"<"),"CKComponentLayoutChild",Object(n.a)("span",o({parentName:"code"},{className:"token operator"}),">")," children",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.a)("span",o({parentName:"code"},{className:"token keyword"}),"struct")," CKComponentLayoutChild ",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  CGPoint position",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n  CKComponentLayout layout",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.a)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(n.a)("h2",null,Object(n.a)("a",o({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"layout-components"})),Object(n.a)("a",o({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#layout-components"}),"#"),"Layout Components"),Object(n.a)("p",null,"ComponentKit includes a library of components that can be composed to declaratively specify a layout."),Object(n.a)("ul",null,Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKFlexboxComponent")," is based on a simplified version of ",Object(n.a)("a",o({parentName:"li"},{href:"http://www.w3.org/TR/css3-flexbox/"}),"CSS flexbox"),". It allows you to stack components vertically or horizontally and specify how they should be flexed and aligned to fit in the available space."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKInsetComponent")," applies an inset margin around a component."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKBackgroundLayoutComponent")," lays out a component, stretching another component behind it as a backdrop."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKOverlayLayoutComponent")," lays out a component, stretching another component on top of it as an overlay."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKCenterLayoutComponent")," centers a component in the available space."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKRatioLayoutComponent")," lays out a component at a fixed aspect ratio."),Object(n.a)("li",{parentName:"ul"},Object(n.a)("inlineCode",{parentName:"li"},"CKStaticLayoutComponent")," allows positioning children at fixed offsets.")),Object(n.a)("h2",null,Object(n.a)("a",o({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"implementing-computelayoutthatfits"})),Object(n.a)("a",o({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#implementing-computelayoutthatfits"}),"#"),"Implementing computeLayoutThatFits:"),Object(n.a)("p",null,"If the components above aren't powerful enough, you can implement ",Object(n.a)("inlineCode",{parentName:"p"},"computeLayoutThatFits:")," manually. This method passes you a ",Object(n.a)("inlineCode",{parentName:"p"},"CKSizeRange")," that specifies a min size and a max size. Choose any size in the given range, then return a ",Object(n.a)("inlineCode",{parentName:"p"},"CKComponentLayout")," structure with the layout of child components."),Object(n.a)("p",null,"For sample implementations of ",Object(n.a)("inlineCode",{parentName:"p"},"computeLayoutThatFits:"),", check out the layout components in ComponentKit itself!"))}l.isMDXComponent=!0}}]);